#!/bin/bash
################################################################################
# Script Name: user/ip.sh
# Description: Create a new user with the provided plan_id.
# Usage: opencli user-ip <USERNAME> <IP> [DELETE] [-y]
# Author: Radovan Jecmenica
# Created: 23.11.2023
# Last Modified: 23.11.2023
# Company: openpanel.co
# Copyright (c) openpanel.co
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
################################################################################

# DB
source /usr/local/admin/scripts/db.sh

USERNAME=$1
IP=$2
CONFIRM_FLAG=$3


# Function to execute MySQL queries
execute_query() {
    QUERY="$1"
    mysql --defaults-extra-file="$CONFIG_FILE" --database="$MYSQL_DATABASE" --execute="$QUERY" --silent
}

# Function to get user ID by username
get_user_id() {
    USERNAME=$1
    QUERY="SELECT id FROM users WHERE username = '$USERNAME';"
    USER_ID=$(execute_query "$QUERY")
    echo "$USER_ID"
}


# Function to list domains by user ID
list_domains_by_user_id() {
    USER_ID=$1
    QUERY="SELECT domain_name FROM domains WHERE user_id = '$USER_ID';"
    execute_query "$QUERY"
}

# Check if username and IP are provided
if [ -z "$USERNAME" ] || [ -z "$IP" ]; then
    echo "Usage: $0 <USERNAME> <IP> [ -y ]"
    exit 1
fi


# Path to JSON file
JSON_FILE="/usr/local/panel/core/users/$USERNAME/ip.json"

# Check if the JSON file for the user exists
if [ -e "$JSON_FILE" ]; then
    # Check if the IP is already in use by another user
    EXISTING_USER=$(grep -l "\"ip\": \"$IP\"" /usr/local/panel/core/users/*/ip.json | grep -v "$USERNAME" | awk -F'/' '{print $NF}')
    
    if [ -n "$EXISTING_USER" ]; then
        if [ "$CONFIRM_FLAG" != "-y" ]; then
            read -p "Warning: IP $IP is already in use by user $EXISTING_USER. Are you sure you want to use it? (y/n): " CONFIRM
            if [ "$CONFIRM" != "y" ]; then
                echo "Operation canceled."
                exit 1
            fi
        fi
    fi
fi

# Create or overwrite the JSON file
echo "{ \"ip\": \"$IP\" }" > "$JSON_FILE"

echo "IP file created/updated for user $USERNAME with IP $IP."
