#!/bin/bash

# Function to generate a random password
generate_random_password() {
    tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c 12
}

# Function to print usage
print_usage() {
    echo "Usage: $0 <username> <new_password | random> [--ssh]"
    exit 1
}

# Check if username and new password are provided as arguments
if [ $# -lt 2 ]; then
    print_usage
fi

# Parse command line options
username=$1
new_password=$2
ssh_flag=false

for arg in "$@"; do
    case $arg in
        --ssh)
            ssh_flag=true
            ;;
    esac
done

# DB
source /usr/local/admin/scripts/db.sh

# Check if the new password should be random generated
if [ "$new_password" == "random" ]; then
    new_password=$(openssl rand -base64 12 | tr -dc 'a-zA-Z0-9')
fi


#Insert data into the database

# Hash password
hashed_password=$(python3 -c "from werkzeug.security import generate_password_hash; print(generate_password_hash('$new_password'))")



# Insert hashed password into MySQL database
mysql_query="UPDATE users SET password='$hashed_password' WHERE username='$username';"

mysql --defaults-extra-file=$config_file -D "$mysql_database" -e "$mysql_query"

if [ $? -eq 0 ]; then


if [ "$new_password" == "random" ]; then
echo "Successfully changed password for user $username, new password is: $new_password"
else
echo "Successfully changed password for user $username."
fi
    
    echo "Error: Data insertion failed."
    exit 1
fi

# Check if --ssh flag is provided
if [ "$ssh_flag" = true ]; then
    # Change the user password in the Docker container
    docker exec "$username" passwd "$username:$new_password"
    echo "Password changed for user $username in Docker container to $new_password"
fi
