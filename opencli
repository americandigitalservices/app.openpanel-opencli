#!/bin/bash

OPENCLI_VERSION="202.407.013"
################################################################################
# Script Name: /usr/local/bin/opencli
# Description: Makes all OpenCLI commands available on the terminal.
# Usage: opencli <COMMAND-NAME> <ATTRIBUTES>
# Author: Stefan Pejcic
# Created: 15.11.2023
# Last Modified: 13.07.2024
# Company: openpanel.co
# Copyright (c) openpanel.co
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
################################################################################

LOG_FILE="/var/log/openpanel/admin/opencli.log" 

# Check if the correct number of arguments is provided
if [ "$#" -lt 1 ]; then
  echo ""
  echo "Usage: opencli <COMMAND> [additional_arguments]"
  echo ""
  echo "Suggested commands:"
  echo "  opencli faq                       Display frequently asked questions and answers."
  echo "  opencli commands                  List all available OpenCLI commands and their usage."
  echo ""
  # Check if the log file exists, ans show most used commands
  if [ ! -f "$LOG_FILE" ]; then
    #echo "Log file $LOG_FILE not found."
    :
  else
    echo "Recently used commands:"
    tail -n 100 "$LOG_FILE" | grep -o 'opencli [^ ]*' | sort | uniq | tail -n 5 | sed 's/^/  /'
    echo ""
    echo "Most commonly used commands:"
    awk -F ' \\| ' '!($2 ~ /^[0-9]+$/) {print "  " $2}' "$LOG_FILE" | sort | uniq | head -n 5
    echo ""
  fi

  echo "About:"
  echo "  Documentation:                    https://dev.openpanel.co/cli/"
  echo "  Version:                          $OPENCLI_VERSION"
  echo "  Author:                           Stefan Pejcic <stefan@pejcic.rs>"
  echo "  License:                          MIT"
  echo ""
  exit 1
fi

# Define the directory containing the binaries
script_dir="/usr/local/admin/scripts"

# Get the binary name from the first argument
binary_name="$1"

# '-v' is alias for '--version'
if [ "$binary_name" = "-v" ]; then
  binary_name="--version"
fi

# https://openpanel.co/docs/changelog/0.2.1/#translations
if [ "$binary_name" = "locale" ]; then
  shift
  if [ "$#" -gt 0 ]; then
    bash <(curl -sSL https://raw.githubusercontent.com/stefanpejcic/openpanel-translations/main/install.sh) "$@"
  else
    bash <(curl -sSL https://raw.githubusercontent.com/stefanpejcic/openpanel-translations/main/install.sh)
  fi
 exit 0
fi

# Replace '-' with '/' in the binary name
binary_command="${binary_name//-//}"

# Build the full path to the binary
binary_path="$script_dir/$binary_command"


if [ "$binary_name" = "blacklist" ]; then
  binary_path="/usr/ipset-blacklist.sh"
fi

if [ "$binary_name" = "sentinel" ]; then
  binary_path="/usr/local/admin/service/notifications.sh"
  if [ ! -x "$binary_path" ]; then
    chmod +x "$binary_path"
    if [ "$?" -ne 0 ]; then
      echo "Error: Failed to set executable permission on '$binary_name'."
      exit 1
    fi
  fi
fi

# Check if the binary exists and is executable
if [ -x "$binary_path" ]; then
  # Shift to remove the binary name from the arguments
  shift

  # Log the command to the log file
  echo "$(date +"%Y-%m-%d %H:%M:%S") | opencli $binary_name" >> "$LOG_FILE"

  # Execute the binary with additional arguments if provided
  if [ "$#" -gt 0 ]; then
    "$binary_path" "$@"
  else
    "$binary_path"
  fi
else
  echo "Error: Command '$binary_command' not found - file '$binary_path' does not exist or not executable."
  exit 1
fi
