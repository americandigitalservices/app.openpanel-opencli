#!/bin/bash

# Check if a domain name is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <domain_name>"
    exit 1
fi

domain_name="$1"
log_file="/var/log/nginx/domlogs/${domain_name}.log"

# Check if the log file exists
if [ ! -f "$log_file" ]; then
    echo "Log file not found: $log_file"
    exit 1
fi

# Function to extract user agents and their counts
generate_browser_json() {
    awk -F'"' '/\"-\"$/ {print "{\"user_agent\": \"-\", \"count\": 1},"; next} {print "{\"user_agent\": \""$NF"\", \"count\": 1},"}' "$log_file" | sort | uniq -c | awk '{print "{\"user_agent\": \""$2"\", \"count\": "$1"},"}' > browser.json
}

# Function to extract IPs, get their country codes, and count them
generate_ip_json() {
    awk '{print $1}' "$log_file" | sort | uniq -c | while read count ip; do
        api_response=$(curl -s "https://api.country.is/${ip}")
        country_code=$(echo "$api_response" | jq -r '.country')
        echo "{\"ip\": \"$ip\", \"count\": $count, \"country_code\": \"$country_code\"},"
    done > ip.json
}

# Function to extract request types and their counts
generate_type_json() {
    awk '{print $6}' "$log_file" | sort | uniq -c | awk '{print "{\"request_type\": \""$2"\", \"count\": "$1"},"}' > type.json
}

# Function to extract URL parts and their counts
generate_link_json() {
    awk '{gsub(/\"/, "", $7); gsub(/GET|POST|PUT|DELETE/, "", $7); print $7}' "$log_file" | sort | uniq -c | awk '{print "{\"link\": \""$2"\", \"count\": "$1"},"}' > link.json
}

# Execute the functions
generate_browser_json
generate_ip_json
generate_type_json
generate_link_json

# Remove trailing commas from the generated JSON files
sed -i 's/,$//' browser.json ip.json type.json link.json

echo "JSON files generated successfully."
